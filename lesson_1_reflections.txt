diff made it easy to find all differences bewteen two versions of the same file,
regardless of how large the file was

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
---This way I can always backtrack to a known-good state and and see what
   changes had which effects.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like
Google docs does?
   ---You may forget to commit, you may commit too large, but then again you
      can control how big/small the commit is.  You can focus your commits
      around tasks.
Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
---They realize that multiple files are tightly coupled to provide functions
   to the programs.
How can you use the commands git log and git diff to view the history of files?
---I can get a comprehensive history of the files and the specific changes made
   to understand which specific versions I should be looking at
How might using version control make you more confident to make changes that
could break something?
---This way I can always revert back to a known-good state without the fear of
   losing all of my work
Now that you have your workspace set up, what do you want to try using Git for?
---I want to make more complex apps in Xcode and use Git to manage my changes
---I also want to use Git with GitHub to share projects and build cred
What happens when you initialize a repository? Why do you need to do it?
---It creates a repo, but it doesn't commit anything, you need to commit
   yourself
How is the staging area different from the working directory and the repository?
What value do you think it offers?
---Adds a snapshot of the file you are about to commit, but gives you a chance
   to not commit in case you make or find a mistake
How can you use the staging area to make sure you have one commit per logical
change?
---You can add each logical change to the staging area before committing, then
   work on the next feature locally without affecting whats in the staging area
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
---Helpful when experimenting with various logical changes, good for working
   independently to interfere with or be interfered by others
How do the diagrams help you visualize the branch structure?
---Helps better visualize which features exist on which branches
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
---it shows that the changes from the branch now exist in the master branch
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
---auto merges take care of things easily when you are merging changes back into
   master.  manual is best for merging master changes into a different branch
